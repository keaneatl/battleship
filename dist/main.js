(()=>{"use strict";var n={917:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,'/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\nbody {\n  line-height: 1;\n}\nol,\nul {\n  list-style: none;\n}\nblockquote,\nq {\n  quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: "";\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n',"",{version:3,sources:["webpack://./src/reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAiFE,SAAS;EACT,UAAU;EACV,SAAS;EACT,wBAAwB;AAC1B;AACA,gDAAgD;AAChD;;;;;;;;;;;EAWE,cAAc;AAChB;AACA;EACE,cAAc;AAChB;AACA;;EAEE,gBAAgB;AAClB;AACA;;EAEE,YAAY;AACd;AACA;;;;EAIE,WAAW;EACX,aAAa;AACf;AACA;EACE,yBAAyB;EACzB,iBAAiB;AACnB",sourcesContent:['/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\nbody {\n  line-height: 1;\n}\nol,\nul {\n  list-style: none;\n}\nblockquote,\nq {\n  quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: "";\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n'],sourceRoot:""}]);const s=i},426:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"/* fonts */\n.textbox {\n  font-size: 1.3rem;\n}\n\n.footer {\n  margin-top: 5rem;\n  font-size: 1.5rem;\n}\n\n/* main styles */\n\nbody {\n  background-color: #f4f1f8;\n  font-size: 16px;\n  font-family: Helvetica, Arial, sans-serif;\n  height: 100vh;\n}\n/* mobile styles */\n\n.header {\n  margin: 2.5rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n\n.textbox {\n  display: none;\n}\n\n.gh-ico {\n  width: 2rem;\n}\n\n.boards-container {\n  height: 69vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.player-board,\n.computer-board {\n  background-color: white;\n  display: grid;\n  grid-template-columns: repeat(10, auto);\n  margin: 1rem 0;\n  border: 1px solid black;\n  width: 300px;\n  height: 300px;\n}\n\n.tile {\n  cursor: pointer;\n  border: 1px solid black;\n}\n\n.tile:hover {\n  background-color: black;\n}\n\n.footer {\n  text-align: center;\n}\n\n/* small tablet styles */\n@media (min-width: 650px) {\n  body {\n    font-size: 20px;\n  }\n  .boards-container {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n  }\n  .textbox {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: white;\n    width: 55%;\n    height: 40px;\n    border-radius: 5px;\n    padding-left: 12px;\n  }\n}\n\n/* large tablet styles */\n@media (min-width: 950px) {\n  body {\n    font-size: 22px;\n  }\n}\n\n/* desktop styles */\n/* large tablet styles */\n@media (min-width: 1250px) {\n  body {\n    font-size: 24px;\n  }\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA,UAAU;AACV;EACE,iBAAiB;AACnB;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA,gBAAgB;;AAEhB;EACE,yBAAyB;EACzB,eAAe;EACf,yCAAyC;EACzC,aAAa;AACf;AACA,kBAAkB;;AAElB;EACE,cAAc;EACd,aAAa;EACb,mBAAmB;EACnB,8BAA8B;AAChC;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;;EAEE,uBAAuB;EACvB,aAAa;EACb,uCAAuC;EACvC,cAAc;EACd,uBAAuB;EACvB,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,eAAe;EACf,uBAAuB;AACzB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,kBAAkB;AACpB;;AAEA,wBAAwB;AACxB;EACE;IACE,eAAe;EACjB;EACA;IACE,aAAa;IACb,mBAAmB;IACnB,6BAA6B;EAC/B;EACA;IACE,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,uBAAuB;IACvB,UAAU;IACV,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;EACpB;AACF;;AAEA,wBAAwB;AACxB;EACE;IACE,eAAe;EACjB;AACF;;AAEA,mBAAmB;AACnB,wBAAwB;AACxB;EACE;IACE,eAAe;EACjB;AACF",sourcesContent:["/* fonts */\n.textbox {\n  font-size: 1.3rem;\n}\n\n.footer {\n  margin-top: 5rem;\n  font-size: 1.5rem;\n}\n\n/* main styles */\n\nbody {\n  background-color: #f4f1f8;\n  font-size: 16px;\n  font-family: Helvetica, Arial, sans-serif;\n  height: 100vh;\n}\n/* mobile styles */\n\n.header {\n  margin: 2.5rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n\n.textbox {\n  display: none;\n}\n\n.gh-ico {\n  width: 2rem;\n}\n\n.boards-container {\n  height: 69vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.player-board,\n.computer-board {\n  background-color: white;\n  display: grid;\n  grid-template-columns: repeat(10, auto);\n  margin: 1rem 0;\n  border: 1px solid black;\n  width: 300px;\n  height: 300px;\n}\n\n.tile {\n  cursor: pointer;\n  border: 1px solid black;\n}\n\n.tile:hover {\n  background-color: black;\n}\n\n.footer {\n  text-align: center;\n}\n\n/* small tablet styles */\n@media (min-width: 650px) {\n  body {\n    font-size: 20px;\n  }\n  .boards-container {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n  }\n  .textbox {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: white;\n    width: 55%;\n    height: 40px;\n    border-radius: 5px;\n    padding-left: 12px;\n  }\n}\n\n/* large tablet styles */\n@media (min-width: 950px) {\n  body {\n    font-size: 22px;\n  }\n}\n\n/* desktop styles */\n/* large tablet styles */\n@media (min-width: 1250px) {\n  body {\n    font-size: 24px;\n  }\n}\n"],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);r&&i[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],s=0;s<n.length;s++){var c=n[s],l=r.base?c[0]+r.base:c[0],A=a[l]||0,d="".concat(l," ").concat(A);a[l]=A+1;var p=t(d),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var b=o(u,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:b,references:1})}i.push(d)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var c=r(n,o),l=0;l<a.length;l++){var A=t(a[l]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),s=t(565),c=t.n(s),l=t(216),A=t.n(l),d=t(589),p=t.n(d),u=t(426),b={};b.styleTagTransform=p(),b.setAttributes=c(),b.insert=i().bind(null,"head"),b.domAPI=o(),b.insertStyleElement=A(),e()(u.Z,b),u.Z&&u.Z.locals&&u.Z.locals;var m=t(917),f={};f.styleTagTransform=p(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=A(),e()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals,(()=>{const n=document.querySelector(".player-board");for(let e=0;e<100;e++){const e=document.createElement("div");e.classList.add("tile"),e.classList.add("p-square"),n.appendChild(e)}})(),(()=>{const n=document.querySelector(".computer-board");for(let e=0;e<100;e++){const e=document.createElement("div");e.classList.add("tile"),e.classList.add("c-square"),n.appendChild(e)}})();const h=(n,e=!1,t)=>{const r=((n=[{square:"1A"},{square:"1B"},{square:"1C"},{square:"1D"},{square:"1E"},{square:"1F"},{square:"1G"},{square:"1H"},{square:"1I"},{square:"1J"}])=>{const e=[];return{board:n,placeShip:(t,r,o=[],a)=>{const i=((n,e,t=[])=>({name:n,lngth:e,hitBox:t,hit:n=>{t.splice(n-1,1,"hit")},isSunk:()=>{if(t.every((n=>"hit"===n)))return!0}}))(t,r,o);for(let e=0;e<r;e++)n[a+e].ship=i,n[a+e].shipPart=e;e.push(i)},receiveAttack:t=>{const r=n[t];return void 0!==r.ship?(e.forEach((n=>{n.name===r.ship.name&&n.hit(r.shipPart)})),"Hit!"):(r.attacked="Missed!","Missed!")},ships:e,isDefeated:()=>e.every((n=>!0===n.isSunk()))}})(t),o=[];return{type:n,board:r,myTurn:e,attackOpp:(n,e)=>{const t=n.board.receiveAttack(e);return o.push(e),t},compAttack:n=>{let e=Math.floor(99*Math.random());for(;o.some((n=>n===e));)e=Math.floor(99*Math.random());return n.board.receiveAttack(e),o.push(e),e}}},y=(()=>{const n=Array.from(document.querySelectorAll(".p-square")),e=Array.from(document.querySelectorAll(".c-square")),t=h("player",!0,n),r=h("comp",!1,e);return t.board.placeShip("carrier",5,[1,2,3,4,5],0),t.board.placeShip("battleship",4,[1,2,3,4],22),t.board.placeShip("destroyer",3,[1,2,3],43),t.board.placeShip("submarine",3,[1,2,3],57),t.board.placeShip("patrolboat",2,[1,2],77),r.board.placeShip("carrier",5,[1,2,3,4,5],73),r.board.placeShip("battleship",4,[1,2,3,4],33),r.board.placeShip("destroyer",3,[1,2,3],46),r.board.placeShip("submarine",3,[1,2,3],95),r.board.placeShip("patrolboat",2,[1,2],15),(()=>{const n=Array.from(document.querySelectorAll(".p-square")),e=Array.from(document.querySelectorAll(".c-square"));n.forEach((n=>{n.ship&&n.setAttribute("style","border: 1px solid #0278f7; background-color: #b6d7f9")})),e.forEach(((n,e)=>{n.addEventListener("click",(()=>((n,e)=>{y.player.myTurn;const t=y.player.attackOpp(y.computer,e);return document.querySelector(".textbox").textContent=t,y.player.myTurn=!1,"Hit!"===t?n.setAttribute("style","border: 1px solid #aa061f; background-color: #e89ba6"):n.setAttribute("style","background-color: black;"),t})(n,e))),n.addEventListener("click",(()=>(n=>{const e=Array.from(document.querySelectorAll(".p-square")),t=y.computer.compAttack(y.player,n);return e[t].ship?e[t].setAttribute("style","border: 1px solid #aa061f; background-color: #e89ba6"):e[t].setAttribute("style","background-color: black;"),y.player.myTurn=!0,t})(e)))}))})(),{player:t,computer:r,playerTiles:n,compTiles:e}})();(()=>{const n=document.querySelector(".textbox"),e=document.querySelector(".player-board"),t=document.querySelector(".computer-board");y.compTiles.forEach(((r,o)=>{r.addEventListener("click",(()=>{y.player.board.isDefeated()?(e.setAttribute("style","pointer-events: none; opacity: 0.4;"),t.setAttribute("style","pointer-events: none; opacity: 0.4;"),n.textContent="You Lose!"):y.computer.board.isDefeated()&&(e.setAttribute("style","pointer-events: none; opacity: 0.4;"),t.setAttribute("style","pointer-events: none; opacity: 0.4;"),n.textContent="You Win!")}))}))})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,