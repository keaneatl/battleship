(()=>{"use strict";var n={917:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,'/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\nbody {\n  line-height: 1;\n}\nol,\nul {\n  list-style: none;\n}\nblockquote,\nq {\n  quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: "";\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n',"",{version:3,sources:["webpack://./src/reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAiFE,SAAS;EACT,UAAU;EACV,SAAS;EACT,wBAAwB;AAC1B;AACA,gDAAgD;AAChD;;;;;;;;;;;EAWE,cAAc;AAChB;AACA;EACE,cAAc;AAChB;AACA;;EAEE,gBAAgB;AAClB;AACA;;EAEE,YAAY;AACd;AACA;;;;EAIE,WAAW;EACX,aAAa;AACf;AACA;EACE,yBAAyB;EACzB,iBAAiB;AACnB",sourcesContent:['/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\nbody {\n  line-height: 1;\n}\nol,\nul {\n  list-style: none;\n}\nblockquote,\nq {\n  quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: "";\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n'],sourceRoot:""}]);const s=i},426:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"/* fonts */\n.textbox {\n  font-size: 1.3rem;\n}\n\n.footer {\n  font-size: 1.5rem;\n}\n\n/* main styles */\n\nbody {\n  background-color: #f4f1f8;\n  font-size: 16px;\n  font-family: Helvetica, Arial, sans-serif;\n  height: 100%;\n  width: 100%;\n}\n/* mobile styles */\n\n.header {\n  padding: 1rem 2.5rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n\n.textbox {\n  border: 1px solid black;\n}\n\n.big {\n  display: none;\n}\n\n.small {\n  display: flex;\n  margin: 0.2rem auto;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  width: 55%;\n  height: 40px;\n  border-radius: 5px;\n}\n\n.gh-ico {\n  width: 2rem;\n}\n\n.boards-container {\n  height: 69vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.player-board,\n.computer-board {\n  background-color: white;\n  display: grid;\n  grid-template-columns: repeat(10, auto);\n  margin: 1rem 0;\n  border: 1px solid black;\n  width: 300px;\n  height: 300px;\n}\n\n.tile {\n  cursor: pointer;\n  border: 1px solid black;\n}\n\n.tile:hover {\n  background-color: black;\n}\n\n.start {\n  cursor: pointer;\n  display: none;\n  justify-self: center;\n  justify-content: center;\n  margin: 0 auto;\n  background-color: black;\n  color: white;\n  border: 0;\n  border-radius: 5px;\n  padding: 0.5rem 1rem;\n}\n\n.footer {\n  margin-top: 2rem;\n  text-align: center;\n  padding: 0 1rem;\n}\n\n.p-square.dragging {\n  opacity: 0.5;\n  background-color: pink;\n}\n\n/* small tablet styles */\n@media (min-width: 650px) {\n  body {\n    font-size: 20px;\n  }\n  .boards-container {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n  }\n  .big {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: white;\n    width: 55%;\n    height: 40px;\n    border-radius: 5px;\n    padding-left: 12px;\n  }\n\n  .small {\n    display: none;\n  }\n\n  .start {\n    width: 10rem;\n  }\n}\n\n/* large tablet styles */\n@media (min-width: 950px) {\n  body {\n    font-size: 22px;\n  }\n}\n\n/* desktop styles */\n/* large tablet styles */\n@media (min-width: 1250px) {\n  body {\n    font-size: 24px;\n  }\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA,UAAU;AACV;EACE,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;AACnB;;AAEA,gBAAgB;;AAEhB;EACE,yBAAyB;EACzB,eAAe;EACf,yCAAyC;EACzC,YAAY;EACZ,WAAW;AACb;AACA,kBAAkB;;AAElB;EACE,oBAAoB;EACpB,aAAa;EACb,mBAAmB;EACnB,8BAA8B;AAChC;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,mBAAmB;EACnB,uBAAuB;EACvB,uBAAuB;EACvB,UAAU;EACV,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;;EAEE,uBAAuB;EACvB,aAAa;EACb,uCAAuC;EACvC,cAAc;EACd,uBAAuB;EACvB,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,eAAe;EACf,uBAAuB;AACzB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,eAAe;EACf,aAAa;EACb,oBAAoB;EACpB,uBAAuB;EACvB,cAAc;EACd,uBAAuB;EACvB,YAAY;EACZ,SAAS;EACT,kBAAkB;EAClB,oBAAoB;AACtB;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,sBAAsB;AACxB;;AAEA,wBAAwB;AACxB;EACE;IACE,eAAe;EACjB;EACA;IACE,aAAa;IACb,mBAAmB;IACnB,6BAA6B;EAC/B;EACA;IACE,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,uBAAuB;IACvB,UAAU;IACV,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;EACpB;;EAEA;IACE,aAAa;EACf;;EAEA;IACE,YAAY;EACd;AACF;;AAEA,wBAAwB;AACxB;EACE;IACE,eAAe;EACjB;AACF;;AAEA,mBAAmB;AACnB,wBAAwB;AACxB;EACE;IACE,eAAe;EACjB;AACF",sourcesContent:["/* fonts */\n.textbox {\n  font-size: 1.3rem;\n}\n\n.footer {\n  font-size: 1.5rem;\n}\n\n/* main styles */\n\nbody {\n  background-color: #f4f1f8;\n  font-size: 16px;\n  font-family: Helvetica, Arial, sans-serif;\n  height: 100%;\n  width: 100%;\n}\n/* mobile styles */\n\n.header {\n  padding: 1rem 2.5rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n\n.textbox {\n  border: 1px solid black;\n}\n\n.big {\n  display: none;\n}\n\n.small {\n  display: flex;\n  margin: 0.2rem auto;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  width: 55%;\n  height: 40px;\n  border-radius: 5px;\n}\n\n.gh-ico {\n  width: 2rem;\n}\n\n.boards-container {\n  height: 69vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.player-board,\n.computer-board {\n  background-color: white;\n  display: grid;\n  grid-template-columns: repeat(10, auto);\n  margin: 1rem 0;\n  border: 1px solid black;\n  width: 300px;\n  height: 300px;\n}\n\n.tile {\n  cursor: pointer;\n  border: 1px solid black;\n}\n\n.tile:hover {\n  background-color: black;\n}\n\n.start {\n  cursor: pointer;\n  display: none;\n  justify-self: center;\n  justify-content: center;\n  margin: 0 auto;\n  background-color: black;\n  color: white;\n  border: 0;\n  border-radius: 5px;\n  padding: 0.5rem 1rem;\n}\n\n.footer {\n  margin-top: 2rem;\n  text-align: center;\n  padding: 0 1rem;\n}\n\n.p-square.dragging {\n  opacity: 0.5;\n  background-color: pink;\n}\n\n/* small tablet styles */\n@media (min-width: 650px) {\n  body {\n    font-size: 20px;\n  }\n  .boards-container {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n  }\n  .big {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: white;\n    width: 55%;\n    height: 40px;\n    border-radius: 5px;\n    padding-left: 12px;\n  }\n\n  .small {\n    display: none;\n  }\n\n  .start {\n    width: 10rem;\n  }\n}\n\n/* large tablet styles */\n@media (min-width: 950px) {\n  body {\n    font-size: 22px;\n  }\n}\n\n/* desktop styles */\n/* large tablet styles */\n@media (min-width: 1250px) {\n  body {\n    font-size: 24px;\n  }\n}\n"],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],s=0;s<n.length;s++){var c=n[s],A=r.base?c[0]+r.base:c[0],l=a[A]||0,d="".concat(A," ").concat(l);a[A]=l+1;var u=t(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=o(p,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:m,references:1})}i.push(d)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var c=r(n,o),A=0;A<a.length;A++){var l=t(a[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),s=t(565),c=t.n(s),A=t(216),l=t.n(A),d=t(589),u=t.n(d),p=t(426),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),e()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;var b=t(917),f={};f.styleTagTransform=u(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=l(),e()(b.Z,f),b.Z&&b.Z.locals&&b.Z.locals,(()=>{const n=document.querySelector(".player-board");for(let e=0;e<100;e++){const e=document.createElement("div");e.classList.add("tile"),e.classList.add("p-square"),n.appendChild(e)}})(),(()=>{const n=document.querySelector(".computer-board");for(let e=0;e<100;e++){const e=document.createElement("div");e.classList.add("tile"),e.classList.add("c-square"),n.appendChild(e)}})();const y=()=>{Array.from(document.querySelectorAll(".p-square")).forEach((n=>{n.ship&&n.setAttribute("style","border: 1px solid #0278f7; background-color: #b6d7f9")}))},h=(n,e=!1,t)=>{const r=((n=[{square:"1A"},{square:"1B"},{square:"1C"},{square:"1D"},{square:"1E"},{square:"1F"},{square:"1G"},{square:"1H"},{square:"1I"},{square:"1J"}])=>{const e=[];return{board:n,placeShip:(t,r,o=[],a)=>{const i=((n,e,t=[])=>({name:n,lngth:e,hitBox:t,hit:n=>{t.splice(n-1,1,"hit")},isSunk:()=>{if(t.every((n=>"hit"===n)))return!0}}))(t,r,o);for(let e=0;e<r;e++)n[a+e].ship=i,n[a+e].shipPart=e;e.push(i)},receiveAttack:t=>{const r=n[t];return void 0!==r.ship?(e.forEach((n=>{n.name===r.ship.name&&n.hit(r.shipPart)})),"Hit!"):(r.attacked="Missed!","Missed!")},ships:e,isDefeated:()=>e.every((n=>!0===n.isSunk()))}})(t),o=[];return{type:n,board:r,myTurn:e,attackOpp:(n,e)=>{const t=n.board.receiveAttack(e);return o.push(e),t},compAttack:n=>{let e=Math.floor(99*Math.random());for(;o.some((n=>n===e));)e=Math.floor(99*Math.random());return n.board.receiveAttack(e),o.push(e),e}}},E=(n=>{const e=Array.from(document.querySelectorAll(".p-square")),t=Array.from(document.querySelectorAll(".c-square")),r=h("player",!0,e),o=h("comp",!1,t);return o.board.placeShip("carrier",5,[1,2,3,4,5],73),o.board.placeShip("battleship",4,[1,2,3,4],33),o.board.placeShip("destroyer",3,[1,2,3],46),o.board.placeShip("submarine",3,[1,2,3],95),o.board.placeShip("patrolboat",2,[1,2],15),y(),{player:r,computer:o,playerTiles:e,compTiles:t}})(),C=()=>{const n=document.querySelector(".computer-board"),e=document.querySelector(".player-board"),t=document.querySelector(".textbox"),r=document.querySelector(".start");n.removeAttribute("style"),r.textContent="Restart Game",r.addEventListener("click",(()=>window.location.reload())),E.compTiles.forEach(((r,o)=>{r.addEventListener("click",(function n(){((n,e)=>{E.player.myTurn;const t=E.player.attackOpp(E.computer,e);Array.from(document.querySelectorAll(".textbox")).forEach((n=>n.textContent=t)),E.player.myTurn=!1,"Hit!"===t?n.setAttribute("style","border: 1px solid #aa061f; background-color: #e89ba6"):n.setAttribute("style","background-color: black;")})(r,o),r.removeEventListener("click",n)})),r.addEventListener("click",(()=>(n=>{const e=Array.from(document.querySelectorAll(".p-square")),t=E.computer.compAttack(E.player,n);return e[t].ship?e[t].setAttribute("style","border: 1px solid #aa061f; background-color: #e89ba6"):e[t].setAttribute("style","background-color: black;"),E.player.myTurn=!0,t})(o)),{once:!0}),r.addEventListener("click",(()=>{E.player.board.isDefeated()?(e.setAttribute("style","pointer-events: none; opacity: 0.4;"),n.setAttribute("style","pointer-events: none; opacity: 0.4;"),t.textContent="You Lose!"):E.computer.board.isDefeated()&&(e.setAttribute("style","pointer-events: none; opacity: 0.4;"),n.setAttribute("style","pointer-events: none; opacity: 0.4;"),t.textContent="You Win!")}))}))};(()=>{const n=Array.from(document.querySelectorAll(".p-square")),e=document.querySelector(".player-board"),t=Array.from(document.querySelectorAll(".textbox")),r=(e,t)=>{let r=!0;t+e>97&&(r=!1);for(let o=0;o<e;o++)(n[t+o].ship||(t+o)%10==0||n[t-1]&&n[t-1].ship)&&(r=!1);return r},o=()=>{e.addEventListener("click",(function o(a){const i=n.indexOf(a.target);r(3,i)?(E.player.board.placeShip("destroyer",3,[1,2,3],i),t.forEach((n=>n.textContent="Place your Submarine.")),y(),e.addEventListener("click",(function o(a){const i=n.indexOf(a.target);r(3,i)?(E.player.board.placeShip("submarine",3,[1,2,3],i),t.forEach((n=>n.textContent="Place your Patrol Boat.")),y(),e.addEventListener("click",(function o(a){const i=n.indexOf(a.target);r(2,i)?(E.player.board.placeShip("patrolboat",2,[1,2],i),t.forEach((n=>n.textContent="Defeat your opponent!")),y(),document.querySelector(".start").setAttribute("style","display:flex;"),e.removeEventListener("click",o)):t.forEach((n=>n.textContent="Please try again."))})),e.removeEventListener("click",o)):t.forEach((n=>n.textContent="Please try again."))})),e.removeEventListener("click",o)):t.forEach((n=>n.textContent="Please try again."))}))};e.addEventListener("click",(function a(i){const s=n.indexOf(i.target);r(5,s)?(E.player.board.placeShip("carrier",5,[1,2,3,4,5],s),t.forEach((n=>n.textContent="Place your Battleship.")),y(),e.addEventListener("click",(function a(i){const s=n.indexOf(i.target);r(4,s)?(E.player.board.placeShip("battleship",4,[1,2,3,4],s),t.forEach((n=>n.textContent="Place your Destroyer.")),y(),o(),e.removeEventListener("click",a)):t.forEach((n=>n.textContent="Please try again."))})),e.removeEventListener("click",a)):t.forEach((n=>n.textContent="Please try again."))}))})(),(()=>{const n=document.querySelector(".start");document.querySelector(".computer-board").setAttribute("style","pointer-events: none; opacity: 0.4;"),n.addEventListener("click",C,{once:!0})})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,